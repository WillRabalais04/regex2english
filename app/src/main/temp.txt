// E = expr2
// F = boundary matcher

// a = //Q
// b = escapedToLiteralOutsideCharClass
// c = LETTER
// d = characterClass
// e = LPAREN
// f = back_reference
// g = quantifier
// h = CARET
// i = DOLLAR_SIGN
// j = '\\b'
// k = '\\B'
// l = '\\A'
// m = '\\G'
// n = '\\z'
// o = '\\Z'
// p = '\\E'
// q = RPAREN


expr : '\\Q' expr '\\E' 

exprHelper : ;