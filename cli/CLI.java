/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cli;

import java.io.IOException;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

import com.googlecode.lanterna.*;
import com.googlecode.lanterna.terminal.*;
import com.googlecode.lanterna.screen.*;
import com.googlecode.lanterna.gui2.*;
import com.googlecode.lanterna.graphics.*;
import com.googlecode.lanterna.TextColor.*;
import com.googlecode.lanterna.SGR;
import com.googlecode.lanterna.input.*;


public class CLI{

    private static Panel mainPanel;
    private static Panel topPanel;
    private static Panel inputPanel;
    private static Panel bottomPanel;
    private static Panel buttonsPanel;
    private static Panel viewingModePanel;
    private static TextBox displayText;
    private static TextBox inputTextBox;
    private static Button enterButton;
    private static Button exitButton;
    private static CheckBoxList<String> checkBoxList;

    public static void main(String[] args) throws IOException{
        
        Terminal terminal = new DefaultTerminalFactory().createTerminal();
        Screen screen = new TerminalScreen(terminal);
        
        terminal.setCursorVisible(true);

        screen.startScreen();

        WindowBasedTextGUI textGUI = new MultiWindowTextGUI(screen, new DefaultWindowManager(), new EmptySpace(TextColor.ANSI.BLACK));
        SimpleTheme theme = new SimpleTheme(TextColor.ANSI.GREEN, TextColor.ANSI.BLACK, SGR.BOLD);
        textGUI.setTheme(theme);

        BasicWindow window = new BasicWindow();
        window.setHints(Arrays.asList(Window.Hint.CENTERED));
        
        mainPanel = new Panel();
        topPanel = new Panel();
        bottomPanel = new Panel(new GridLayout(2));
        inputPanel = new Panel();
        buttonsPanel = new Panel();
        viewingModePanel = new Panel();
  
        displayText = new TextBox();
        displayText.setReadOnly(true);
        inputTextBox = new TextBox("-tl -cmp [aafasdfbcd]", TextBox.Style.MULTI_LINE);

        checkBoxList = new CheckBoxList<String>(new TerminalSize(20,20));
        checkBoxList.addItem("Arrows", true);
        checkBoxList.addItem("Mouse Pan", false);
        
        enterButton = new Button("Enter", () -> {
            
            String inputText = inputTextBox.getText();
            try{     
                String cmd =  "gradle run --args=\"" + inputText + "\"";
                ProcessBuilder runGradle = new ProcessBuilder("bash", "-c",cmd);
                Process process = runGradle.start();
                
                int exitCode = process.waitFor();

                if(exitCode == 0){
                FileReader fileReader = new FileReader("./cli/out.txt");
                BufferedReader bufferedReader = new BufferedReader(fileReader);
                
                StringBuilder sb = new StringBuilder();
                String line = bufferedReader.readLine();
                while (line != null) {
                    sb.append(line);
                    sb.append(System.lineSeparator());
                    line = bufferedReader.readLine();                
                }
                fileReader.close();
                bufferedReader.close();
                process.destroy();

                String content = sb.toString();
                if(!content.equals("")){
                  displayText.setText(content);
                }
                else{                  
                    displayText.setText("Input could not be read.");
                }
                } else{
                    System.out.println("Backend parsing failed.");
                }
            }
            catch(Exception e){
                e.printStackTrace();
                System.out.println("Frontend can't reach backend.");
            }
           
        });


        exitButton = new Button("Exit", () -> {
          System.exit(0);
        });


        topPanel.addComponent(displayText);

        viewingModePanel.addComponent(checkBoxList);

        inputPanel.addComponent(inputTextBox);

        buttonsPanel.addComponent(enterButton);
        buttonsPanel.addComponent(exitButton);

        bottomPanel.addComponent(buttonsPanel);
        bottomPanel.addComponent(viewingModePanel.withBorder(Borders.doubleLine("Viewing Mode")));

        mainPanel.addComponent(topPanel.withBorder(Borders.doubleLine("Regex2English")));
        mainPanel.addComponent(inputPanel.withBorder(Borders.doubleLine("Input")));
        mainPanel.addComponent(bottomPanel.withBorder(Borders.doubleLine()));

        setSizeOfAllComponents(screen.getTerminalSize());

        window.setComponent(mainPanel);
  
        terminal.addResizeListener(new TerminalResizeListener() {
            @Override
            public void onResized(Terminal terminal, TerminalSize newSize) {
                setSizeOfAllComponents(newSize);
                try {
                    // terminal.flush();
                    terminal.clearScreen();

                }
                catch(Exception e) {
                    System.out.println("Terminal window resize failed!");
                }
            }
        });

        textGUI.addWindowAndWait(window); 
    }

    private static void setSizeOfAllComponents(TerminalSize size){

        //main panel:
        mainPanel.setPreferredSize(size);
        GridLayout mainPanelLayout =  new GridLayout(1)    
        .setLeftMarginSize(1)
        .setRightMarginSize(1)
        .setTopMarginSize(0)
        .setBottomMarginSize(0);
        mainPanelLayout.createLayoutData(GridLayout.Alignment.CENTER,GridLayout.Alignment.END,true,true);
        mainPanel.setLayoutManager(mainPanelLayout);

        int cols = size.getColumns();
        int rows = size.getRows();

        checkBoxList.setPreferredSize(new TerminalSize(40,20));
        
        // bottom panel:
        bottomPanel.setPreferredSize(new TerminalSize(cols, 20));

        //input panel:
        inputPanel.setPreferredSize(new TerminalSize(cols, 20));

        // ViewingMode Panel:
        viewingModePanel.setPreferredSize(new TerminalSize(40, 20));

        //buttons panel:
        buttonsPanel.setPreferredSize(new TerminalSize(cols, 12));
        GridLayout buttonsPanelLayout =  new GridLayout(1)    
        .setLeftMarginSize(0)
        .setRightMarginSize(0)
        .setTopMarginSize(1)
        .setBottomMarginSize(0);
        buttonsPanelLayout.createLayoutData(GridLayout.Alignment.CENTER,GridLayout.Alignment.CENTER);
        buttonsPanel.setLayoutManager(buttonsPanelLayout);

        // textboxes:
        inputTextBox.setPreferredSize(new TerminalSize(cols, 20));

        // buttons:
        enterButton.setPreferredSize(new TerminalSize(cols, 2));
        exitButton.setPreferredSize(new TerminalSize(cols, 2));

        // top panel:
        topPanel.setPreferredSize(new TerminalSize(cols,rows));
        displayText.setPreferredSize(new TerminalSize(cols, rows));


    }

}

